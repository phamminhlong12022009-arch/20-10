import React, { useState, useRef, useEffect, useCallback } from "react";

export default function App() {
  const [locked, setLocked] = useState(true);
  const [passwordInput, setPasswordInput] = useState("");
  const password = "20/10LOVE";
  const message = `💌 Chúc em 20/10 thật xinh đẹp, hạnh phúc và luôn được yêu thương ❤️\n\nTừ người thương của em 🌸`;
  const scrollRef = useRef(null);
  const scrollInterval = useRef(null);

  const handleUnlock = useCallback(() => {
    if (passwordInput === password) {
      setLocked(false);
    } else {
      alert("Sai mật khẩu rồi 💔");
    }
  }, [passwordInput]);

  useEffect(() => {
    if (!locked && scrollRef.current) {
      const el = scrollRef.current;

      scrollInterval.current = setInterval(() => {
        el.scrollBy({ top: 1, behavior: "smooth" });
        if (el.scrollTop + el.clientHeight >= el.scrollHeight - 2) {
          el.scrollTo({ top: 0, behavior: "smooth" });
        }
      }, 50);

      return () => clearInterval(scrollInterval.current);
    }
  }, [locked]);

  return (
    <div style={{ fontFamily: "sans-serif", textAlign: "center", padding: 20 }}>
      <h1 style={{ color: "#e91e63" }}>💖 Trang Tình Yêu 20/10 💖</h1>
      {locked ? (
        <div>
          <p>Nhập mật khẩu để xem tin nhắn (gợi ý: 20/10LOVE)</p>
          <input
            type="password"
            value={passwordInput}
            onChange={(e) => setPasswordInput(e.target.value)}
            style={{ padding: 8, borderRadius: 8 }}
            aria-label="Password input"
            autoFocus
          />
          <button
            onClick={handleUnlock}
            style={{
              marginLeft: 10,
              padding: "8px 16px",
              background: "#e91e63",
              color: "white",
              border: "none",
              borderRadius: 8,
              cursor: "pointer",
            }}
            aria-label="Unlock message"
          >
            Mở khóa
          </button>
        </div>
      ) : (
        <div
          ref={scrollRef}
          style={{
            marginTop: 20,
            border: "2px solid #f48fb1",
            borderRadius: 10,
            padding: 20,
            width: "80%",
            maxWidth: 500,
            height: 300,
            overflow: "auto",
            marginInline: "auto",
            background: "#fff0f6",
          }}
        >
          {message.split("\n").map((line, i) => (
            <p key={i}>{line}</p>
          ))}
        </div>
      )}
    </div>
  );
}
